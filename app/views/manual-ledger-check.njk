{% extends '_layout.njk' %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}

{% block beforeContent %}
  {{ govukBackLink({
      text: "Back",
      href: "/manual-ledger",
      attributes: {
        id: "back"
      }
    }) 
  }}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <h1 class="govuk-heading-l">Manual Ledger Check - {{manualLedgerData.invoiceNumber}}</h1>
    </div>
    <div class="govuk-grid-column-one-half">
      <h1 class="govuk-heading-m">Header:</h1>
      <dl class="govuk-summary-list">
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            FRN
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.frn}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Scheme
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.schemes.name}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Invoice
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.invoiceNumber}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Agreement
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.agreementNumber}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Request
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.paymentRequestNumber}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Currency
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.currency}}
          </dd>
        </div>
      </dl>
    </div>
    <div class="govuk-grid-column-one-half">
      <h1 class="govuk-heading-m">Orignal:</h1>
      <dl class="govuk-summary-list">
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Ledger
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.ledger}}
          </dd>
        </div>
        <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
          <dt class="govuk-summary-list__key">
            Value
          </dt>
          <dd class="govuk-summary-list__value">
            {{manualLedgerData.value}}
          </dd>
        </div>
      </dl>
      <h1 class="govuk-heading-m">Calculated:</h1>
      {% for data in manualLedgerData.manualLedgerChecks %}
        <dl class="govuk-summary-list">
          <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
            <dt class="govuk-summary-list__key">
              Ledger
            </dt>
            <dd class="govuk-summary-list__value">
              {{data.ledger}}
            </dd>
          </div>
          <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
            <dt class="govuk-summary-list__key">
              Value
            </dt>
            <dd class="govuk-summary-list__value">
              {{data.value}}
            </dd>
          </div>
        </dl>
      {% endfor %}
    </div>
    <div class="govuk-grid-column-full">
      <h1 class="govuk-heading-m">Ledger Split:</h1>
      <form method="POST" action="/manual-ledger-check" novalidate>
        <input type="hidden" name="crumb" value="{{crumb}}"/>
        <input type="hidden" name="paymentRequestId" value="{{ manualLedgerData.paymentRequestId }}"/>
        <div class="govuk-grid-column-one-half">
          <h1 class="govuk-heading-s">AP:</h1>
          <div class="govuk-form-group">
            <label class="govuk-label" for="apValue">
              Value
            </label>
            <div class="govuk-input__wrapper">
              <div class="govuk-input__prefix" aria-hidden="true">£</div>
              <input class="govuk-input govuk-input--width-5" id="apValue" name="apValue" value="{{manualLedgerData.apAutoValue}}" type="text">
            </div>
          </div>
          <div class="govuk-form-group">
            <label class="govuk-label" for="apPercentage">
              Percentage
            </label>
            <div class="govuk-input__wrapper">
              <input class="govuk-input govuk-input--width-5" id="apPercentage" name="apPercentage" type="text">
              <div class="govuk-input__suffix" aria-hidden="true">%</div>
            </div>
          </div>
          {{ govukButton({
              text: "Accept",
              attributes: {
                id: "submit"
              }
            }) 
          }}
        </div>
        <div class="govuk-grid-column-one-half">
          <h1 class="govuk-heading-s">AR:</h1>
          <div class="govuk-form-group">
            <label class="govuk-label" for="arValue">
              Value
            </label>
            <div class="govuk-input__wrapper">
              <div class="govuk-input__prefix" aria-hidden="true">£</div>
              <input class="govuk-input govuk-input--width-5" id="arValue" name="arValue" value="{{manualLedgerData.arAutoValue}}" type="text">
            </div>
          </div>
          <div class="govuk-form-group">
            <label class="govuk-label" for="arPercentage">
              Percentage
            </label>
            <div class="govuk-input__wrapper">
              <input class="govuk-input govuk-input--width-5" id="arPercentage" name="arPercentage" type="text">
              <div class="govuk-input__suffix" aria-hidden="true">%</div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>    
</div>
  
  {% if model.errorSummary %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: model.errorSummary
    }) 
  }}
  {% endif %}

</div>

  <script>
    const arAutoValue = {{manualLedgerData.arAutoValue}}
    const apValue = document.getElementById("apValue")
    const apPercentage = document.getElementById("apPercentage")
    const arValue = document.getElementById("arValue")
    const arPercentage = document.getElementById("arPercentage")

    const calculatePercentage = (partialValue, totalValue) => {
      return (100 * partialValue) / totalValue
    } 

    const calculatePercentValue = (percentValue, partialValue) => {
      return ((percentValue * partialValue) / 100)
    }

    const setDefaultPercentage = () => {
      apPercentage.value = calculatePercentage(apValue.value, arAutoValue)
      arPercentage.value = calculatePercentage(arValue.value, arAutoValue)
    }

    setDefaultPercentage()

    const setValue = (changedValue, valueToChange) => {
      const value = document.getElementById(changedValue).value
      const calculate = arAutoValue - value
      document.getElementById(valueToChange).value = calculate
      setDefaultPercentage()
    }

    const setPercentage = (percentageChangeValue, valueToChange, percentageToCalculate, valueToCalculate) => {
      const value = document.getElementById(percentageChangeValue).value
      const percentValue = calculatePercentValue(value, arAutoValue)
      document.getElementById(valueToChange).value = percentValue
      const calculate = 100 - value
      document.getElementById(percentageToCalculate).value = calculate
      document.getElementById(valueToCalculate).value  = calculatePercentValue(calculate, arAutoValue)
    }

    arValue.addEventListener('input', (event) => {
      setValue('arValue', 'apValue')
    })

    apValue.addEventListener('input', (event) => {
      setValue("apValue", "arValue")
    })

    arPercentage.addEventListener('input', (event) => {
      setPercentage("arPercentage", "arValue", "apPercentage", "apValue")
    })

    apPercentage.addEventListener('input', (event) => {
      setPercentage("apPercentage", "apValue", "arPercentage", "arValue")
    })

  </script>
{% endblock %}
